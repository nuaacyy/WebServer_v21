http协议：超文本传输协议
该协议是应用层协议
用来规定浏览器与服务端传输数据的格式

http协议分为两大部分
1：
请求协议 request
2：
响应协议 response
请求：客户端发送给服务端的内容为请求
响应：服务端回馈客户端的内容为响应

http协议要求客户端与服务端的通讯必须基于一次请求一次响应
且总是客户端先发起请求，服务端处理后进行响应，服务端不会主动
发送给客户端

请求协议：
http规定了客户端发送给服务端的请求内容 该内容的格式必须
符合http的请求协议


http请求的格式分为三部分组成：
1:
请求行
2：
请求头（消息头）
3：
请求正文（消息正文）

GET / HTTP/1.1(CRLF)
Host: localhost:8088(CRLF)
Connection: keep-alive(CRLF)
Cache-Control: max-age=0(CRLF)
Upgrade-Insecure-Requests: 1(CRLF)
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36(CRLF)
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8(CRLF)
Accept-Encoding: gzip, deflate, sdch, br(CRLF)
Accept-Language: zh-CN,zh;q=0.8(CRLF)(CRLF)

请求行：
请求行分为三部分，格式为：
method url protocol(CRLF)
分别表示请求的方法，请求的资源路径，以及客户端使用的http协议的版本
方法常见为get post （http规定了相关方法）
请求行以crlf作为结尾
cr：回车 对应的asc编码为13
lf：换行 对应的asc编码为10
如：
GET / HTTP/1.1(CRLF)   万维网

消息头：
消息头由若干行组成，每一行为一个具体的头信息，每个头信息以
crlf表示结束。
头分为两部分：头名字和对应的值
格式为：name：value（crlf）
例如：
Connection: keep-alive(CRLF)

消息头的意义是在请求中附带的一些信息，比如
告知服务端该请求所接受的响应的字符集，是否需要保持连接
每个头的具体意义http协议都有规定
当所有消息头全部发送后会单独发送一个(CRLF)，所以最后一个消息头
后面会有两个crlf，第一个表示最后一个消息头结束
而第二个表示消息头部分发送完毕

消息正文：
消息正文为二进制数据，是客户端需要发送给父服务端的数据
具体表示什么含义，该部分总共多少字节都会在消息头中说明
比如我们上传的图片，提交的注册信息都是放在消息正文部分
发送给服务端

一个http请求可以不包含消息正文部分，但是会包含请求行与消息头


http响应
http响应分为三部分：
1 状态行
2 响应头
3 响应正文

状态行
状态行由三部分组成：协议版本 状态码 状态描述
格式：
http-version status-code reason-phrase（crlf）
例如：
http/1.1 200 ok（crlf）
状态代码http协议进行了分类：
1xx：信息响应类 表示接受到请求并继续处理
2xx：处理成功响应类，表示请求被成功接受，处理和接受
3xx：重定向类 表示为了完成指定的动作，需要进一步处理
4xx：客户端错误类，表示客户端的请求包含错误的语法或不能正确
处理
5xx：服务端错误类，表示服务端不能正确的处理该请求

响应头
响应头的格式与http请求中消息头格式一样，在最后一个头发送完毕后
要单独发送一个crlf表示响应头部分发送完毕

响应正文
2进制数据，具体该数据的介质类型，以及长度都会在响应头中说明

一个完整的响应内容如：
http/1.1 200 ok（crlf）
content-type：text/html（crlf）
content-length：325（crlf）（crlf）
1011100001010100100110.<响应正文中的二进制数据，一共325字节>













